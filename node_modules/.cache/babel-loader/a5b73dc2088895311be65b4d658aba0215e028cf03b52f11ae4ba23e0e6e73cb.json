{"ast":null,"code":"var _jsxFileName = \"/Users/Kosmo/Documents/React/mapa-polski/src/components/MapaPolski.js\";\nimport React from 'react';\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from 'react-simple-maps';\n\n// Link do pliku GeoJSON z województwami Polski\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://raw.githubusercontent.com/ppatrzyk/polska-geojson/master/wojewodztwa/wojewodztwa-max.geojshttps://raw.githubusercontent.com/ppatrzyk/polska-geojson/master/wojewodztwa/wojewodztwa-medium.geojson\";\nconst MapaPolski = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Mapa Polski\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ComposableMap, {\n      projection: \"geoMercator\",\n      projectionConfig: {\n        scale: 1000,\n        center: [19, 52] // Centrum mapy na Polskę\n      },\n      style: {\n        width: \"100%\",\n        height: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n        center: [19, 52],\n        zoom: 1,\n        children: /*#__PURE__*/_jsxDEV(Geographies, {\n          geography: geoUrl,\n          children: ({\n            geographies\n          }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n            geography: geo,\n            onMouseEnter: () => {\n              // Zmiana stylu po najechaniu\n              document.getElementById(geo.rsmKey).style.strokeWidth = \"2px\";\n              document.getElementById(geo.rsmKey).style.fill = \"#CCC\";\n            },\n            onMouseLeave: () => {\n              // Przywrócenie domyślnego stylu\n              document.getElementById(geo.rsmKey).style.strokeWidth = \"0.5px\";\n              document.getElementById(geo.rsmKey).style.fill = \"#EEE\";\n            },\n            onClick: () => {\n              // Obsługa kliknięcia na województwo\n              console.log(\"Kliknięto województwo:\", geo.properties);\n            },\n            style: {\n              default: {\n                fill: \"#EEE\",\n                // Kolor wypełnienia\n                stroke: \"#000\",\n                // Kolor obrysu\n                strokeWidth: \"0.5px\",\n                // Grubość obrysu\n                outline: \"none\" // Usunięcie domyślnego outline\n              },\n              hover: {\n                fill: \"#CCC\",\n                // Kolor wypełnienia po najechaniu\n                stroke: \"#000\",\n                // Kolor obrysu po najechaniu\n                strokeWidth: \"2px\",\n                // Grubość obrysu po najechaniu\n                outline: \"none\"\n              },\n              pressed: {\n                fill: \"#AAA\",\n                // Kolor wypełnienia po kliknięciu\n                stroke: \"#000\",\n                // Kolor obrysu po kliknięciu\n                strokeWidth: \"2px\",\n                // Grubość obrysu po kliknięciu\n                outline: \"none\"\n              }\n            }\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = MapaPolski;\nexport default MapaPolski;\nvar _c;\n$RefreshReg$(_c, \"MapaPolski\");","map":{"version":3,"names":["React","ComposableMap","Geographies","Geography","ZoomableGroup","jsxDEV","_jsxDEV","geoUrl","MapaPolski","children","fileName","_jsxFileName","lineNumber","columnNumber","projection","projectionConfig","scale","center","style","width","height","zoom","geography","geographies","map","geo","onMouseEnter","document","getElementById","rsmKey","strokeWidth","fill","onMouseLeave","onClick","console","log","properties","default","stroke","outline","hover","pressed","_c","$RefreshReg$"],"sources":["/Users/Kosmo/Documents/React/mapa-polski/src/components/MapaPolski.js"],"sourcesContent":["import React from 'react';\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from 'react-simple-maps';\n\n// Link do pliku GeoJSON z województwami Polski\nconst geoUrl = \"https://raw.githubusercontent.com/ppatrzyk/polska-geojson/master/wojewodztwa/wojewodztwa-max.geojshttps://raw.githubusercontent.com/ppatrzyk/polska-geojson/master/wojewodztwa/wojewodztwa-medium.geojson\";\n\nconst MapaPolski = () => {\n  return (\n    <div>\n      <h1>Mapa Polski</h1>\n      <ComposableMap\n        projection=\"geoMercator\"\n        projectionConfig={{\n          scale: 1000,\n          center: [19, 52], // Centrum mapy na Polskę\n        }}\n        style={{\n          width: \"100%\",\n          height: \"auto\",\n        }}\n      >\n        {/* ZoomableGroup z domyślnym centrum i zoomem */}\n        <ZoomableGroup center={[19, 52]} zoom={1}>\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map((geo) => (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  onMouseEnter={() => {\n                    // Zmiana stylu po najechaniu\n                    document.getElementById(geo.rsmKey).style.strokeWidth = \"2px\";\n                    document.getElementById(geo.rsmKey).style.fill = \"#CCC\";\n                  }}\n                  onMouseLeave={() => {\n                    // Przywrócenie domyślnego stylu\n                    document.getElementById(geo.rsmKey).style.strokeWidth = \"0.5px\";\n                    document.getElementById(geo.rsmKey).style.fill = \"#EEE\";\n                  }}\n                  onClick={() => {\n                    // Obsługa kliknięcia na województwo\n                    console.log(\"Kliknięto województwo:\", geo.properties);\n                  }}\n                  style={{\n                    default: {\n                      fill: \"#EEE\", // Kolor wypełnienia\n                      stroke: \"#000\", // Kolor obrysu\n                      strokeWidth: \"0.5px\", // Grubość obrysu\n                      outline: \"none\", // Usunięcie domyślnego outline\n                    },\n                    hover: {\n                      fill: \"#CCC\", // Kolor wypełnienia po najechaniu\n                      stroke: \"#000\", // Kolor obrysu po najechaniu\n                      strokeWidth: \"2px\", // Grubość obrysu po najechaniu\n                      outline: \"none\",\n                    },\n                    pressed: {\n                      fill: \"#AAA\", // Kolor wypełnienia po kliknięciu\n                      stroke: \"#000\", // Kolor obrysu po kliknięciu\n                      strokeWidth: \"2px\", // Grubość obrysu po kliknięciu\n                      outline: \"none\",\n                    },\n                  }}\n                />\n              ))\n            }\n          </Geographies>\n        </ZoomableGroup>\n      </ComposableMap>\n    </div>\n  );\n};\n\nexport default MapaPolski;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}