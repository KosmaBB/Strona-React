{"ast":null,"code":"var _jsxFileName = \"/Users/Kosmo/Documents/React/mapa-polski/src/components/MapaPolski.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from 'react-simple-maps';\n\n// Link do pliku GeoJSON z województwami Polski\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://raw.githubusercontent.com/ppatrzyk/polska-geojson/master/wojewodztwa/wojewodztwa-medium.geojson\";\nconst MapaPolski = () => {\n  _s();\n  // Referencja do elementu Geography\n  const geographyRefs = useRef({});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Mapa Polski\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ComposableMap, {\n      projection: \"geoMercator\",\n      projectionConfig: {\n        scale: 1500,\n        center: [19, 52] // Centrum mapy na Polskę\n      },\n      style: {\n        width: \"80%\",\n        height: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Geographies, {\n        geography: geoUrl,\n        children: ({\n          gerographies\n        }) => geographies.map(geo => {\n          const ref = el => geographyRefs.current[geo.rsmKey] = el;\n          return /*#__PURE__*/_jsxDEV(Geography, {\n            Geography: geo,\n            ref: ref,\n            onMouseEnter: () => {\n              if (geographyRefs.current[geo.rsmKey]) {\n                geographyRefs.current[geo.rsmKey].style.strokeWidth = \"2px\";\n                geographyRefs.current[geo.rsmKey].style.fill = \"#CCC\";\n              }\n            },\n            onMouseLeave: () => {\n              if (geographyRefs.current[geo.rsmKey]) {\n                geographyRefs.current[geo.rsmKey].style.strokeWidth = \"0.5px\";\n                geographyRefs.current[geo.rsmKey].style.fill = \"#EEE\";\n              }\n            },\n            onClick: () => {\n              console.log(\"Kliknięto w województwo\", geo.properties);\n            },\n            style: {\n              default: {\n                fill: \"#EEE\",\n                stroke: \"#000\",\n                strokeWidth: \"0.5px\",\n                outline: \"none\",\n                opacity: hoveredVoivodeship === geo.rsmKey ? 1 : 0.5,\n                transition: \"all 0.3s ease\"\n              },\n              hover: {\n                fill: \"#CCC\",\n                stroke: \"#000\",\n                strokeWidth: \"2px\",\n                outline: \"none\",\n                filter: \"drop-shadow(0 0 8px rgba(128, 0, 128, 0.8))\",\n                transform: \"scale(1.05) translateY(-5)\",\n                opacity: 1,\n                transtition: \"all 0.3s ease\"\n              },\n              Pressed: {\n                fill: \"#AAA\",\n                stroke: \"#000\",\n                strokeWidth: \"2px\",\n                outline: \"none\"\n              }\n            }\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n};\n_s(MapaPolski, \"Y+CqB/nHmMxFsWC+D1cLzLEJL8w=\");\n_c = MapaPolski;\nexport default MapaPolski;\nvar _c;\n$RefreshReg$(_c, \"MapaPolski\");","map":{"version":3,"names":["React","useRef","ComposableMap","Geographies","Geography","ZoomableGroup","jsxDEV","_jsxDEV","geoUrl","MapaPolski","_s","geographyRefs","children","fileName","_jsxFileName","lineNumber","columnNumber","projection","projectionConfig","scale","center","style","width","height","geography","gerographies","geographies","map","geo","ref","el","current","rsmKey","onMouseEnter","strokeWidth","fill","onMouseLeave","onClick","console","log","properties","default","stroke","outline","opacity","hoveredVoivodeship","transition","hover","filter","transform","transtition","Pressed","_c","$RefreshReg$"],"sources":["/Users/Kosmo/Documents/React/mapa-polski/src/components/MapaPolski.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from 'react-simple-maps';\n\n// Link do pliku GeoJSON z województwami Polski\nconst geoUrl = \"https://raw.githubusercontent.com/ppatrzyk/polska-geojson/master/wojewodztwa/wojewodztwa-medium.geojson\";\n\nconst MapaPolski = () => {\n    // Referencja do elementu Geography\n    const geographyRefs = useRef({});\n  \n    return (\n      <div>\n        <h1>Mapa Polski</h1>\n        <ComposableMap\n          projection=\"geoMercator\"\n          projectionConfig={{\n            scale: 1500,\n            center: [19, 52], // Centrum mapy na Polskę\n          }}\n          style={{\n            width: \"80%\",\n            height: \"auto\",\n          }}\n        >\n            <Geographies geography={geoUrl}>\n                {({ gerographies }) =>\n                geographies.map((geo) => {\n                    const ref = (el) => (geographyRefs.current[geo.rsmKey] = el);\n\n                    return (\n                        <Geography\n                        key={geo.rsmKey}\n                        Geography={geo}\n                        ref={ref}\n                        onMouseEnter={() => {\n                            if (geographyRefs.current[geo.rsmKey]) {\n                                geographyRefs.current[geo.rsmKey].style.strokeWidth = \"2px\";\n                                geographyRefs.current[geo.rsmKey].style.fill = \"#CCC\";\n                            }\n                        }}\n                        onMouseLeave={() => {\n                            if (geographyRefs.current[geo.rsmKey]) {\n                                geographyRefs.current[geo.rsmKey].style.strokeWidth = \"0.5px\";\n                                geographyRefs.current[geo.rsmKey].style.fill = \"#EEE\";\n                            }\n                        }}\n                        onClick={() => {\n                            console.log(\"Kliknięto w województwo\", geo.properties);\n                        }}\n                        style={{\n                            default: {\n                                fill: \"#EEE\",\n                                stroke: \"#000\",\n                                strokeWidth: \"0.5px\",\n                                outline: \"none\",\n                                opacity: hoveredVoivodeship === geo.rsmKey ? 1 : 0.5,\n                                transition: \"all 0.3s ease\",\n                            },\n                            hover: {\n                                fill: \"#CCC\",\n                                stroke: \"#000\",\n                                strokeWidth: \"2px\",\n                                outline: \"none\",\n                                filter: \"drop-shadow(0 0 8px rgba(128, 0, 128, 0.8))\",\n                                transform: \"scale(1.05) translateY(-5)\",\n                                opacity: 1,\n                                transtition: \"all 0.3s ease\",\n                            },\n                            Pressed: {\n                                fill: \"#AAA\",\n                                stroke: \"#000\",\n                                strokeWidth: \"2px\",\n                                outline: \"none\",\n                            },\n                        }}\n                      />\n                    );\n                  })\n                }\n              </Geographies>\n            </ComposableMap>\n          </div>\n        );\n      };\nexport default MapaPolski;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}