{"ast":null,"code":"var _jsxFileName = \"/Users/Kosmo/Documents/React/mapa-polski/src/components/MapaPolski.js\";\nimport React, { useState } from 'react';\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from 'react-simple-maps';\n\n// Wklej tutaj link do swojego pliku GeoJSON w formacie raw\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://raw.githubusercontent.com/nazwa-uzytkownika/nazwa-repozytorium/sciezka/do/pliku.geojson\";\nconst MapaPolski = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Mapa Polski\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ComposableMap, {\n      projection: \"geoMercator\",\n      projectionConfig: {\n        scale: 1000,\n        center: [19, 52]\n      },\n      children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n        children: /*#__PURE__*/_jsxDEV(Geographies, {\n          geography: geoUrl,\n          children: ({\n            geographies\n          }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n            geography: geo,\n            style: {\n              default: {\n                fill: \"#EEE\",\n                stroke: \"#000\",\n                strokeWidth: \"0.5px\",\n                outline: \"none\"\n              },\n              hover: {\n                fill: \"#CCC\",\n                stroke: \"#000\",\n                strokeWidth: \"1px\",\n                outline: \"none\"\n              },\n              pressed: {\n                fill: \"#AAA\",\n                stroke: \"#000\",\n                strokeWidth: \"1px\",\n                outline: \"none\"\n              }\n            }\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = MapaPolski;\nexport default MapaPolski;\nvar _c;\n$RefreshReg$(_c, \"MapaPolski\");","map":{"version":3,"names":["React","useState","ComposableMap","Geographies","Geography","ZoomableGroup","jsxDEV","_jsxDEV","geoUrl","MapaPolski","children","fileName","_jsxFileName","lineNumber","columnNumber","projection","projectionConfig","scale","center","geography","geographies","map","geo","style","default","fill","stroke","strokeWidth","outline","hover","pressed","rsmKey","_c","$RefreshReg$"],"sources":["/Users/Kosmo/Documents/React/mapa-polski/src/components/MapaPolski.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from 'react-simple-maps';\n\n// Wklej tutaj link do swojego pliku GeoJSON w formacie raw\nconst geoUrl = \"https://raw.githubusercontent.com/nazwa-uzytkownika/nazwa-repozytorium/sciezka/do/pliku.geojson\";\n\nconst MapaPolski = () => {\n  return (\n    <div>\n      <h1>Mapa Polski</h1>\n      <ComposableMap\n        projection=\"geoMercator\"\n        projectionConfig={{\n          scale: 1000,\n          center: [19, 52],\n        }}\n      >\n        <ZoomableGroup>\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map((geo) => (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  style={{\n                    default: {\n                      fill: \"#EEE\",\n                      stroke: \"#000\",\n                      strokeWidth: \"0.5px\",\n                      outline: \"none\",\n                    },\n                    hover: {\n                      fill: \"#CCC\",\n                      stroke: \"#000\",\n                      strokeWidth: \"1px\",\n                      outline: \"none\",\n                    },\n                    pressed: {\n                      fill: \"#AAA\",\n                      stroke: \"#000\",\n                      strokeWidth: \"1px\",\n                      outline: \"none\",\n                    },\n                  }}\n                />\n              ))\n            }\n          </Geographies>\n        </ZoomableGroup>\n      </ComposableMap>\n    </div>\n  );\n};\n\nexport default MapaPolski;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,EAAEC,WAAW,EAAEC,SAAS,EAAEC,aAAa,QAAQ,mBAAmB;;AAExF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAG,iGAAiG;AAEhH,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,oBACEF,OAAA;IAAAG,QAAA,gBACEH,OAAA;MAAAG,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBP,OAAA,CAACL,aAAa;MACZa,UAAU,EAAC,aAAa;MACxBC,gBAAgB,EAAE;QAChBC,KAAK,EAAE,IAAI;QACXC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE;MACjB,CAAE;MAAAR,QAAA,eAEFH,OAAA,CAACF,aAAa;QAAAK,QAAA,eACZH,OAAA,CAACJ,WAAW;UAACgB,SAAS,EAAEX,MAAO;UAAAE,QAAA,EAC5BA,CAAC;YAAEU;UAAY,CAAC,KACfA,WAAW,CAACC,GAAG,CAAEC,GAAG,iBAClBf,OAAA,CAACH,SAAS;YAERe,SAAS,EAAEG,GAAI;YACfC,KAAK,EAAE;cACLC,OAAO,EAAE;gBACPC,IAAI,EAAE,MAAM;gBACZC,MAAM,EAAE,MAAM;gBACdC,WAAW,EAAE,OAAO;gBACpBC,OAAO,EAAE;cACX,CAAC;cACDC,KAAK,EAAE;gBACLJ,IAAI,EAAE,MAAM;gBACZC,MAAM,EAAE,MAAM;gBACdC,WAAW,EAAE,KAAK;gBAClBC,OAAO,EAAE;cACX,CAAC;cACDE,OAAO,EAAE;gBACPL,IAAI,EAAE,MAAM;gBACZC,MAAM,EAAE,MAAM;gBACdC,WAAW,EAAE,KAAK;gBAClBC,OAAO,EAAE;cACX;YACF;UAAE,GArBGN,GAAG,CAACS,MAAM;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAsBhB,CACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV,CAAC;AAACkB,EAAA,GA9CIvB,UAAU;AAgDhB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}