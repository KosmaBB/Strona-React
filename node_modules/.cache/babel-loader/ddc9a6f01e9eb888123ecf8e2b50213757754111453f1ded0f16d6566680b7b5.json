{"ast":null,"code":"var _jsxFileName = \"/Users/Kosmo/Documents/React/mapa-polski/src/components/MapaPolski.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from 'react-simple-maps';\n\n// Link do pliku GeoJSON z województwami Polski\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://raw.githubusercontent.com/ppatrzyk/polska-geojson/master/wojewodztwa/wojewodztwa-medium.geojson\";\nconst MapaPolski = () => {\n  _s();\n  // Referencja do elementu Geography\n  const geographyRefs = useRef({});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Mapa Polski\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ComposableMap, {\n      projection: \"geoMercator\",\n      projectionConfig: {\n        scale: 1000,\n        center: [19, 52] // Centrum mapy na Polskę\n      },\n      style: {\n        width: \"100%\",\n        height: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n        center: [19, 52],\n        zoom: 1,\n        children: /*#__PURE__*/_jsxDEV(Geographies, {\n          geography: geoUrl,\n          children: ({\n            geographies\n          }) => geographies.map(geo => {\n            // Ustawienie referencji dla każdego Geography\n            const ref = el => geographyRefs.current[geo.rsmKey] = el;\n            return /*#__PURE__*/_jsxDEV(Geography, {\n              geography: geo,\n              ref: ref,\n              onMouseEnter: () => {\n                // Zmiana stylu po najechaniu\n                if (geographyRefs.current[geo.rsmKey]) {\n                  geographyRefs.current[geo.rsmKey].style.strokeWidth = \"2px\";\n                  geographyRefs.current[geo.rsmKey].style.fill = \"#CCC\";\n                }\n              },\n              onMouseLeave: () => {\n                // Przywrócenie domyślnego stylu\n                if (geographyRefs.current[geo.rsmKey]) {\n                  geographyRefs.current[geo.rsmKey].style.strokeWidth = \"0.5px\";\n                  geographyRefs.current[geo.rsmKey].style.fill = \"#EEE\";\n                }\n              },\n              onClick: () => {\n                // Obsługa kliknięcia na województwo\n                console.log(\"Kliknięto województwo:\", geo.properties);\n              },\n              style: {\n                default: {\n                  fill: \"#EEE\",\n                  // Kolor wypełnienia\n                  stroke: \"#000\",\n                  // Kolor obrysu\n                  strokeWidth: \"0.5px\",\n                  // Grubość obrysu\n                  outline: \"none\" // Usunięcie domyślnego outline\n                },\n                hover: {\n                  fill: \"#CCC\",\n                  // Kolor wypełnienia po najechaniu\n                  stroke: \"#000\",\n                  // Kolor obrysu po najechaniu\n                  strokeWidth: \"2px\",\n                  // Grubość obrysu po najechaniu\n                  outline: \"none\"\n                },\n                pressed: {\n                  fill: \"#AAA\",\n                  // Kolor wypełnienia po kliknięciu\n                  stroke: \"#000\",\n                  // Kolor obrysu po kliknięciu\n                  strokeWidth: \"2px\",\n                  // Grubość obrysu po kliknięciu\n                  outline: \"none\"\n                }\n              }\n            }, geo.rsmKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n};\n_s(MapaPolski, \"Y+CqB/nHmMxFsWC+D1cLzLEJL8w=\");\n_c = MapaPolski;\nexport default MapaPolski;\nvar _c;\n$RefreshReg$(_c, \"MapaPolski\");","map":{"version":3,"names":["React","ComposableMap","Geographies","Geography","ZoomableGroup","jsxDEV","_jsxDEV","geoUrl","MapaPolski","_s","geographyRefs","useRef","children","fileName","_jsxFileName","lineNumber","columnNumber","projection","projectionConfig","scale","center","style","width","height","zoom","geography","geographies","map","geo","ref","el","current","rsmKey","onMouseEnter","strokeWidth","fill","onMouseLeave","onClick","console","log","properties","default","stroke","outline","hover","pressed","_c","$RefreshReg$"],"sources":["/Users/Kosmo/Documents/React/mapa-polski/src/components/MapaPolski.js"],"sourcesContent":["import React from 'react';\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from 'react-simple-maps';\n\n// Link do pliku GeoJSON z województwami Polski\nconst geoUrl = \"https://raw.githubusercontent.com/ppatrzyk/polska-geojson/master/wojewodztwa/wojewodztwa-medium.geojson\";\n\nconst MapaPolski = () => {\n    // Referencja do elementu Geography\n    const geographyRefs = useRef({});\n  \n    return (\n      <div>\n        <h1>Mapa Polski</h1>\n        <ComposableMap\n          projection=\"geoMercator\"\n          projectionConfig={{\n            scale: 1000,\n            center: [19, 52], // Centrum mapy na Polskę\n          }}\n          style={{\n            width: \"100%\",\n            height: \"auto\",\n          }}\n        >\n          {/* ZoomableGroup z domyślnym centrum i zoomem */}\n          <ZoomableGroup center={[19, 52]} zoom={1}>\n            <Geographies geography={geoUrl}>\n              {({ geographies }) =>\n                geographies.map((geo) => {\n                  // Ustawienie referencji dla każdego Geography\n                  const ref = (el) => (geographyRefs.current[geo.rsmKey] = el);\n  \n                  return (\n                    <Geography\n                      key={geo.rsmKey}\n                      geography={geo}\n                      ref={ref}\n                      onMouseEnter={() => {\n                        // Zmiana stylu po najechaniu\n                        if (geographyRefs.current[geo.rsmKey]) {\n                          geographyRefs.current[geo.rsmKey].style.strokeWidth = \"2px\";\n                          geographyRefs.current[geo.rsmKey].style.fill = \"#CCC\";\n                        }\n                      }}\n                      onMouseLeave={() => {\n                        // Przywrócenie domyślnego stylu\n                        if (geographyRefs.current[geo.rsmKey]) {\n                          geographyRefs.current[geo.rsmKey].style.strokeWidth = \"0.5px\";\n                          geographyRefs.current[geo.rsmKey].style.fill = \"#EEE\";\n                        }\n                      }}\n                      onClick={() => {\n                        // Obsługa kliknięcia na województwo\n                        console.log(\"Kliknięto województwo:\", geo.properties);\n                      }}\n                      style={{\n                        default: {\n                          fill: \"#EEE\", // Kolor wypełnienia\n                          stroke: \"#000\", // Kolor obrysu\n                          strokeWidth: \"0.5px\", // Grubość obrysu\n                          outline: \"none\", // Usunięcie domyślnego outline\n                        },\n                        hover: {\n                          fill: \"#CCC\", // Kolor wypełnienia po najechaniu\n                          stroke: \"#000\", // Kolor obrysu po najechaniu\n                          strokeWidth: \"2px\", // Grubość obrysu po najechaniu\n                          outline: \"none\",\n                        },\n                        pressed: {\n                          fill: \"#AAA\", // Kolor wypełnienia po kliknięciu\n                          stroke: \"#000\", // Kolor obrysu po kliknięciu\n                          strokeWidth: \"2px\", // Grubość obrysu po kliknięciu\n                          outline: \"none\",\n                        },\n                      }}\n                    />\n                  );\n                })\n              }\n            </Geographies>\n          </ZoomableGroup>\n        </ComposableMap>\n      </div>\n    );\n  };\n  \n  export default MapaPolski;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}